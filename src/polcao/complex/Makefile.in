# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = pOLCAOsetup$(EXEEXT) pOLCAOmain$(EXEEXT)
subdir = src/polcao/complex
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_pOLCAOmain_OBJECTS = kinds.$(OBJEXT) constants.$(OBJEXT) \
	readData.$(OBJEXT) stringSubs.$(OBJEXT) mathSubs.$(OBJEXT) \
	sortSubs.$(OBJEXT) interfaces.$(OBJEXT) timeStamps.$(OBJEXT) \
	commandLine.$(OBJEXT) potSites.$(OBJEXT) potTypes.$(OBJEXT) \
	atomicTypes.$(OBJEXT) atomicSites.$(OBJEXT) \
	potential.$(OBJEXT) lattice.$(OBJEXT) kpoints.$(OBJEXT) \
	hdf5SetupIntg.$(OBJEXT) hdf5SetupElec.$(OBJEXT) \
	hdf5SetupExco.$(OBJEXT) hdf5Setup.$(OBJEXT) \
	parallelSubs.$(OBJEXT) exchCorr.$(OBJEXT) input.$(OBJEXT) \
	hdf5MainEval.$(OBJEXT) hdf5MainEvect.$(OBJEXT) \
	hdf5Main.$(OBJEXT) hdf5PSCFBand.$(OBJEXT) elecStat.$(OBJEXT) \
	matrixSubs.$(OBJEXT) secularEqn.$(OBJEXT) populate.$(OBJEXT) \
	valeCharge.$(OBJEXT) potentialUpdate.$(OBJEXT) dos.$(OBJEXT) \
	bond.$(OBJEXT) OLCAO_Main.$(OBJEXT) OLCAO_MainWrap.$(OBJEXT)
pOLCAOmain_OBJECTS = $(am_pOLCAOmain_OBJECTS)
pOLCAOmain_LDADD = $(LDADD)
am_pOLCAOsetup_OBJECTS = kinds.$(OBJEXT) constants.$(OBJEXT) \
	readData.$(OBJEXT) stringSubs.$(OBJEXT) mathSubs.$(OBJEXT) \
	sortSubs.$(OBJEXT) interfaces.$(OBJEXT) timeStamps.$(OBJEXT) \
	commandLine.$(OBJEXT) potSites.$(OBJEXT) potTypes.$(OBJEXT) \
	atomicTypes.$(OBJEXT) atomicSites.$(OBJEXT) \
	potential.$(OBJEXT) lattice.$(OBJEXT) basis.$(OBJEXT) \
	kpoints.$(OBJEXT) gaussRelations.$(OBJEXT) \
	gaussIntegrals.$(OBJEXT) hdf5SetupIntg.$(OBJEXT) \
	hdf5SetupElec.$(OBJEXT) hdf5SetupExco.$(OBJEXT) \
	hdf5Setup.$(OBJEXT) parallelSubs.$(OBJEXT) exchCorr.$(OBJEXT) \
	elecStat.$(OBJEXT) intgOrtho.$(OBJEXT) intgSaving.$(OBJEXT) \
	integralsSCF.$(OBJEXT) coreCharge.$(OBJEXT) input.$(OBJEXT) \
	OLCAO_Setup.$(OBJEXT) OLCAO_SetupWrap.$(OBJEXT)
pOLCAOsetup_OBJECTS = $(am_pOLCAOsetup_OBJECTS)
pOLCAOsetup_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
PPFCCOMPILE = $(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
SOURCES = $(pOLCAOmain_SOURCES) $(pOLCAOsetup_SOURCES)
DIST_SOURCES = $(pOLCAOmain_SOURCES) $(pOLCAOsetup_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
FC = @FC@
FCFLAGS = @FCFLAGS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
perllibdir = @perllibdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
pOLCAOsetup_SOURCES = ../../kinds.f90 ../../constants.f90 ../../readData.f90 \
   ../stringSubs.f90 ../mathSubs.f90 ../sortSubs.f90 ../interfaces.F90 \
   ../timeStamps.F90 ../commandLine.f90 ../potSites.f90 ../potTypes.f90 \
   ../atomicTypes.f90 ../atomicSites.f90 ../potential.f90 ../lattice.f90 \
   ../basis.f90 ../kpoints.f90 ../gaussRelations.f90 ../gaussIntegrals.f90 \
   ../hdf5SetupIntg.F90 ../hdf5SetupElec.f90 ../hdf5SetupExco.f90 \
   ../hdf5Setup.f90 ../parallelSubs.F90 ../exchCorr.f90 ../elecStat.f90 \
   ../intgOrtho.F90 ../intgSaving.F90 ../integralsSCF.F90 \
	 ../coreCharge.f90 ../input.F90 ../OLCAO_Setup.F90 ../OLCAO_SetupWrap.f90

pOLCAOmain_SOURCES = ../../kinds.f90 ../../constants.f90 ../../readData.f90 \
   ../stringSubs.f90 ../mathSubs.f90 ../sortSubs.f90 ../interfaces.F90 \
   ../timeStamps.F90 ../commandLine.f90 ../potSites.f90 ../potTypes.f90 \
   ../atomicTypes.f90 ../atomicSites.f90 ../potential.f90 ../lattice.f90 \
   ../kpoints.f90 ../hdf5SetupIntg.F90 ../hdf5SetupElec.f90 \
   ../hdf5SetupExco.f90 ../hdf5Setup.f90 ../parallelSubs.F90 \
   ../exchCorr.f90 ../input.F90 ../hdf5MainEval.f90 \
   ../hdf5MainEvect.F90 ../hdf5Main.f90 ../hdf5PSCFBand.F90 \
   ../elecStat.f90 ../matrixSubs.F90 ../secularEqn.F90 ../populate.F90 \
	 ../valeCharge.F90 ../potentialUpdate.f90 ../dos.F90 ../bond.F90 \
	 ../OLCAO_Main.f90 ../OLCAO_MainWrap.f90

all: all-am

.SUFFIXES:
.SUFFIXES: .F90 .f90 .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/polcao/complex/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/polcao/complex/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
pOLCAOmain$(EXEEXT): $(pOLCAOmain_OBJECTS) $(pOLCAOmain_DEPENDENCIES) 
	@rm -f pOLCAOmain$(EXEEXT)
	$(FCLINK) $(pOLCAOmain_LDFLAGS) $(pOLCAOmain_OBJECTS) $(pOLCAOmain_LDADD) $(LIBS)
pOLCAOsetup$(EXEEXT): $(pOLCAOsetup_OBJECTS) $(pOLCAOsetup_DEPENDENCIES) 
	@rm -f pOLCAOsetup$(EXEEXT)
	$(FCLINK) $(pOLCAOsetup_LDFLAGS) $(pOLCAOsetup_OBJECTS) $(pOLCAOsetup_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.F90.o:
	$(PPFCCOMPILE) -c -o $@ $<

.F90.obj:
	$(PPFCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

interfaces.o: ../interfaces.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o interfaces.o `test -f '../interfaces.F90' || echo '$(srcdir)/'`../interfaces.F90

interfaces.obj: ../interfaces.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o interfaces.obj `if test -f '../interfaces.F90'; then $(CYGPATH_W) '../interfaces.F90'; else $(CYGPATH_W) '$(srcdir)/../interfaces.F90'; fi`

timeStamps.o: ../timeStamps.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o timeStamps.o `test -f '../timeStamps.F90' || echo '$(srcdir)/'`../timeStamps.F90

timeStamps.obj: ../timeStamps.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o timeStamps.obj `if test -f '../timeStamps.F90'; then $(CYGPATH_W) '../timeStamps.F90'; else $(CYGPATH_W) '$(srcdir)/../timeStamps.F90'; fi`

hdf5SetupIntg.o: ../hdf5SetupIntg.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5SetupIntg.o `test -f '../hdf5SetupIntg.F90' || echo '$(srcdir)/'`../hdf5SetupIntg.F90

hdf5SetupIntg.obj: ../hdf5SetupIntg.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5SetupIntg.obj `if test -f '../hdf5SetupIntg.F90'; then $(CYGPATH_W) '../hdf5SetupIntg.F90'; else $(CYGPATH_W) '$(srcdir)/../hdf5SetupIntg.F90'; fi`

parallelSubs.o: ../parallelSubs.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o parallelSubs.o `test -f '../parallelSubs.F90' || echo '$(srcdir)/'`../parallelSubs.F90

parallelSubs.obj: ../parallelSubs.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o parallelSubs.obj `if test -f '../parallelSubs.F90'; then $(CYGPATH_W) '../parallelSubs.F90'; else $(CYGPATH_W) '$(srcdir)/../parallelSubs.F90'; fi`

input.o: ../input.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o input.o `test -f '../input.F90' || echo '$(srcdir)/'`../input.F90

input.obj: ../input.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o input.obj `if test -f '../input.F90'; then $(CYGPATH_W) '../input.F90'; else $(CYGPATH_W) '$(srcdir)/../input.F90'; fi`

hdf5MainEvect.o: ../hdf5MainEvect.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5MainEvect.o `test -f '../hdf5MainEvect.F90' || echo '$(srcdir)/'`../hdf5MainEvect.F90

hdf5MainEvect.obj: ../hdf5MainEvect.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5MainEvect.obj `if test -f '../hdf5MainEvect.F90'; then $(CYGPATH_W) '../hdf5MainEvect.F90'; else $(CYGPATH_W) '$(srcdir)/../hdf5MainEvect.F90'; fi`

hdf5PSCFBand.o: ../hdf5PSCFBand.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5PSCFBand.o `test -f '../hdf5PSCFBand.F90' || echo '$(srcdir)/'`../hdf5PSCFBand.F90

hdf5PSCFBand.obj: ../hdf5PSCFBand.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5PSCFBand.obj `if test -f '../hdf5PSCFBand.F90'; then $(CYGPATH_W) '../hdf5PSCFBand.F90'; else $(CYGPATH_W) '$(srcdir)/../hdf5PSCFBand.F90'; fi`

matrixSubs.o: ../matrixSubs.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o matrixSubs.o `test -f '../matrixSubs.F90' || echo '$(srcdir)/'`../matrixSubs.F90

matrixSubs.obj: ../matrixSubs.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o matrixSubs.obj `if test -f '../matrixSubs.F90'; then $(CYGPATH_W) '../matrixSubs.F90'; else $(CYGPATH_W) '$(srcdir)/../matrixSubs.F90'; fi`

secularEqn.o: ../secularEqn.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o secularEqn.o `test -f '../secularEqn.F90' || echo '$(srcdir)/'`../secularEqn.F90

secularEqn.obj: ../secularEqn.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o secularEqn.obj `if test -f '../secularEqn.F90'; then $(CYGPATH_W) '../secularEqn.F90'; else $(CYGPATH_W) '$(srcdir)/../secularEqn.F90'; fi`

populate.o: ../populate.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o populate.o `test -f '../populate.F90' || echo '$(srcdir)/'`../populate.F90

populate.obj: ../populate.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o populate.obj `if test -f '../populate.F90'; then $(CYGPATH_W) '../populate.F90'; else $(CYGPATH_W) '$(srcdir)/../populate.F90'; fi`

valeCharge.o: ../valeCharge.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o valeCharge.o `test -f '../valeCharge.F90' || echo '$(srcdir)/'`../valeCharge.F90

valeCharge.obj: ../valeCharge.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o valeCharge.obj `if test -f '../valeCharge.F90'; then $(CYGPATH_W) '../valeCharge.F90'; else $(CYGPATH_W) '$(srcdir)/../valeCharge.F90'; fi`

dos.o: ../dos.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o dos.o `test -f '../dos.F90' || echo '$(srcdir)/'`../dos.F90

dos.obj: ../dos.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o dos.obj `if test -f '../dos.F90'; then $(CYGPATH_W) '../dos.F90'; else $(CYGPATH_W) '$(srcdir)/../dos.F90'; fi`

bond.o: ../bond.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o bond.o `test -f '../bond.F90' || echo '$(srcdir)/'`../bond.F90

bond.obj: ../bond.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o bond.obj `if test -f '../bond.F90'; then $(CYGPATH_W) '../bond.F90'; else $(CYGPATH_W) '$(srcdir)/../bond.F90'; fi`

intgOrtho.o: ../intgOrtho.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o intgOrtho.o `test -f '../intgOrtho.F90' || echo '$(srcdir)/'`../intgOrtho.F90

intgOrtho.obj: ../intgOrtho.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o intgOrtho.obj `if test -f '../intgOrtho.F90'; then $(CYGPATH_W) '../intgOrtho.F90'; else $(CYGPATH_W) '$(srcdir)/../intgOrtho.F90'; fi`

intgSaving.o: ../intgSaving.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o intgSaving.o `test -f '../intgSaving.F90' || echo '$(srcdir)/'`../intgSaving.F90

intgSaving.obj: ../intgSaving.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o intgSaving.obj `if test -f '../intgSaving.F90'; then $(CYGPATH_W) '../intgSaving.F90'; else $(CYGPATH_W) '$(srcdir)/../intgSaving.F90'; fi`

integralsSCF.o: ../integralsSCF.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o integralsSCF.o `test -f '../integralsSCF.F90' || echo '$(srcdir)/'`../integralsSCF.F90

integralsSCF.obj: ../integralsSCF.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o integralsSCF.obj `if test -f '../integralsSCF.F90'; then $(CYGPATH_W) '../integralsSCF.F90'; else $(CYGPATH_W) '$(srcdir)/../integralsSCF.F90'; fi`

OLCAO_Setup.o: ../OLCAO_Setup.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o OLCAO_Setup.o `test -f '../OLCAO_Setup.F90' || echo '$(srcdir)/'`../OLCAO_Setup.F90

OLCAO_Setup.obj: ../OLCAO_Setup.F90
	$(FC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FCFLAGS) $(FCFLAGS) -c -o OLCAO_Setup.obj `if test -f '../OLCAO_Setup.F90'; then $(CYGPATH_W) '../OLCAO_Setup.F90'; else $(CYGPATH_W) '$(srcdir)/../OLCAO_Setup.F90'; fi`

.f90.o:
	$(FCCOMPILE) -c -o $@ $<

.f90.obj:
	$(FCCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

kinds.o: ../../kinds.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o kinds.o `test -f '../../kinds.f90' || echo '$(srcdir)/'`../../kinds.f90

kinds.obj: ../../kinds.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o kinds.obj `if test -f '../../kinds.f90'; then $(CYGPATH_W) '../../kinds.f90'; else $(CYGPATH_W) '$(srcdir)/../../kinds.f90'; fi`

constants.o: ../../constants.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o constants.o `test -f '../../constants.f90' || echo '$(srcdir)/'`../../constants.f90

constants.obj: ../../constants.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o constants.obj `if test -f '../../constants.f90'; then $(CYGPATH_W) '../../constants.f90'; else $(CYGPATH_W) '$(srcdir)/../../constants.f90'; fi`

readData.o: ../../readData.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o readData.o `test -f '../../readData.f90' || echo '$(srcdir)/'`../../readData.f90

readData.obj: ../../readData.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o readData.obj `if test -f '../../readData.f90'; then $(CYGPATH_W) '../../readData.f90'; else $(CYGPATH_W) '$(srcdir)/../../readData.f90'; fi`

stringSubs.o: ../stringSubs.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o stringSubs.o `test -f '../stringSubs.f90' || echo '$(srcdir)/'`../stringSubs.f90

stringSubs.obj: ../stringSubs.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o stringSubs.obj `if test -f '../stringSubs.f90'; then $(CYGPATH_W) '../stringSubs.f90'; else $(CYGPATH_W) '$(srcdir)/../stringSubs.f90'; fi`

mathSubs.o: ../mathSubs.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o mathSubs.o `test -f '../mathSubs.f90' || echo '$(srcdir)/'`../mathSubs.f90

mathSubs.obj: ../mathSubs.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o mathSubs.obj `if test -f '../mathSubs.f90'; then $(CYGPATH_W) '../mathSubs.f90'; else $(CYGPATH_W) '$(srcdir)/../mathSubs.f90'; fi`

sortSubs.o: ../sortSubs.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o sortSubs.o `test -f '../sortSubs.f90' || echo '$(srcdir)/'`../sortSubs.f90

sortSubs.obj: ../sortSubs.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o sortSubs.obj `if test -f '../sortSubs.f90'; then $(CYGPATH_W) '../sortSubs.f90'; else $(CYGPATH_W) '$(srcdir)/../sortSubs.f90'; fi`

commandLine.o: ../commandLine.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o commandLine.o `test -f '../commandLine.f90' || echo '$(srcdir)/'`../commandLine.f90

commandLine.obj: ../commandLine.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o commandLine.obj `if test -f '../commandLine.f90'; then $(CYGPATH_W) '../commandLine.f90'; else $(CYGPATH_W) '$(srcdir)/../commandLine.f90'; fi`

potSites.o: ../potSites.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o potSites.o `test -f '../potSites.f90' || echo '$(srcdir)/'`../potSites.f90

potSites.obj: ../potSites.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o potSites.obj `if test -f '../potSites.f90'; then $(CYGPATH_W) '../potSites.f90'; else $(CYGPATH_W) '$(srcdir)/../potSites.f90'; fi`

potTypes.o: ../potTypes.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o potTypes.o `test -f '../potTypes.f90' || echo '$(srcdir)/'`../potTypes.f90

potTypes.obj: ../potTypes.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o potTypes.obj `if test -f '../potTypes.f90'; then $(CYGPATH_W) '../potTypes.f90'; else $(CYGPATH_W) '$(srcdir)/../potTypes.f90'; fi`

atomicTypes.o: ../atomicTypes.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o atomicTypes.o `test -f '../atomicTypes.f90' || echo '$(srcdir)/'`../atomicTypes.f90

atomicTypes.obj: ../atomicTypes.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o atomicTypes.obj `if test -f '../atomicTypes.f90'; then $(CYGPATH_W) '../atomicTypes.f90'; else $(CYGPATH_W) '$(srcdir)/../atomicTypes.f90'; fi`

atomicSites.o: ../atomicSites.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o atomicSites.o `test -f '../atomicSites.f90' || echo '$(srcdir)/'`../atomicSites.f90

atomicSites.obj: ../atomicSites.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o atomicSites.obj `if test -f '../atomicSites.f90'; then $(CYGPATH_W) '../atomicSites.f90'; else $(CYGPATH_W) '$(srcdir)/../atomicSites.f90'; fi`

potential.o: ../potential.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o potential.o `test -f '../potential.f90' || echo '$(srcdir)/'`../potential.f90

potential.obj: ../potential.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o potential.obj `if test -f '../potential.f90'; then $(CYGPATH_W) '../potential.f90'; else $(CYGPATH_W) '$(srcdir)/../potential.f90'; fi`

lattice.o: ../lattice.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o lattice.o `test -f '../lattice.f90' || echo '$(srcdir)/'`../lattice.f90

lattice.obj: ../lattice.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o lattice.obj `if test -f '../lattice.f90'; then $(CYGPATH_W) '../lattice.f90'; else $(CYGPATH_W) '$(srcdir)/../lattice.f90'; fi`

kpoints.o: ../kpoints.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o kpoints.o `test -f '../kpoints.f90' || echo '$(srcdir)/'`../kpoints.f90

kpoints.obj: ../kpoints.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o kpoints.obj `if test -f '../kpoints.f90'; then $(CYGPATH_W) '../kpoints.f90'; else $(CYGPATH_W) '$(srcdir)/../kpoints.f90'; fi`

hdf5SetupElec.o: ../hdf5SetupElec.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5SetupElec.o `test -f '../hdf5SetupElec.f90' || echo '$(srcdir)/'`../hdf5SetupElec.f90

hdf5SetupElec.obj: ../hdf5SetupElec.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5SetupElec.obj `if test -f '../hdf5SetupElec.f90'; then $(CYGPATH_W) '../hdf5SetupElec.f90'; else $(CYGPATH_W) '$(srcdir)/../hdf5SetupElec.f90'; fi`

hdf5SetupExco.o: ../hdf5SetupExco.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5SetupExco.o `test -f '../hdf5SetupExco.f90' || echo '$(srcdir)/'`../hdf5SetupExco.f90

hdf5SetupExco.obj: ../hdf5SetupExco.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5SetupExco.obj `if test -f '../hdf5SetupExco.f90'; then $(CYGPATH_W) '../hdf5SetupExco.f90'; else $(CYGPATH_W) '$(srcdir)/../hdf5SetupExco.f90'; fi`

hdf5Setup.o: ../hdf5Setup.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5Setup.o `test -f '../hdf5Setup.f90' || echo '$(srcdir)/'`../hdf5Setup.f90

hdf5Setup.obj: ../hdf5Setup.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5Setup.obj `if test -f '../hdf5Setup.f90'; then $(CYGPATH_W) '../hdf5Setup.f90'; else $(CYGPATH_W) '$(srcdir)/../hdf5Setup.f90'; fi`

exchCorr.o: ../exchCorr.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o exchCorr.o `test -f '../exchCorr.f90' || echo '$(srcdir)/'`../exchCorr.f90

exchCorr.obj: ../exchCorr.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o exchCorr.obj `if test -f '../exchCorr.f90'; then $(CYGPATH_W) '../exchCorr.f90'; else $(CYGPATH_W) '$(srcdir)/../exchCorr.f90'; fi`

hdf5MainEval.o: ../hdf5MainEval.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5MainEval.o `test -f '../hdf5MainEval.f90' || echo '$(srcdir)/'`../hdf5MainEval.f90

hdf5MainEval.obj: ../hdf5MainEval.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5MainEval.obj `if test -f '../hdf5MainEval.f90'; then $(CYGPATH_W) '../hdf5MainEval.f90'; else $(CYGPATH_W) '$(srcdir)/../hdf5MainEval.f90'; fi`

hdf5Main.o: ../hdf5Main.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5Main.o `test -f '../hdf5Main.f90' || echo '$(srcdir)/'`../hdf5Main.f90

hdf5Main.obj: ../hdf5Main.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o hdf5Main.obj `if test -f '../hdf5Main.f90'; then $(CYGPATH_W) '../hdf5Main.f90'; else $(CYGPATH_W) '$(srcdir)/../hdf5Main.f90'; fi`

elecStat.o: ../elecStat.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o elecStat.o `test -f '../elecStat.f90' || echo '$(srcdir)/'`../elecStat.f90

elecStat.obj: ../elecStat.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o elecStat.obj `if test -f '../elecStat.f90'; then $(CYGPATH_W) '../elecStat.f90'; else $(CYGPATH_W) '$(srcdir)/../elecStat.f90'; fi`

potentialUpdate.o: ../potentialUpdate.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o potentialUpdate.o `test -f '../potentialUpdate.f90' || echo '$(srcdir)/'`../potentialUpdate.f90

potentialUpdate.obj: ../potentialUpdate.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o potentialUpdate.obj `if test -f '../potentialUpdate.f90'; then $(CYGPATH_W) '../potentialUpdate.f90'; else $(CYGPATH_W) '$(srcdir)/../potentialUpdate.f90'; fi`

OLCAO_Main.o: ../OLCAO_Main.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o OLCAO_Main.o `test -f '../OLCAO_Main.f90' || echo '$(srcdir)/'`../OLCAO_Main.f90

OLCAO_Main.obj: ../OLCAO_Main.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o OLCAO_Main.obj `if test -f '../OLCAO_Main.f90'; then $(CYGPATH_W) '../OLCAO_Main.f90'; else $(CYGPATH_W) '$(srcdir)/../OLCAO_Main.f90'; fi`

OLCAO_MainWrap.o: ../OLCAO_MainWrap.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o OLCAO_MainWrap.o `test -f '../OLCAO_MainWrap.f90' || echo '$(srcdir)/'`../OLCAO_MainWrap.f90

OLCAO_MainWrap.obj: ../OLCAO_MainWrap.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o OLCAO_MainWrap.obj `if test -f '../OLCAO_MainWrap.f90'; then $(CYGPATH_W) '../OLCAO_MainWrap.f90'; else $(CYGPATH_W) '$(srcdir)/../OLCAO_MainWrap.f90'; fi`

basis.o: ../basis.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o basis.o `test -f '../basis.f90' || echo '$(srcdir)/'`../basis.f90

basis.obj: ../basis.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o basis.obj `if test -f '../basis.f90'; then $(CYGPATH_W) '../basis.f90'; else $(CYGPATH_W) '$(srcdir)/../basis.f90'; fi`

gaussRelations.o: ../gaussRelations.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gaussRelations.o `test -f '../gaussRelations.f90' || echo '$(srcdir)/'`../gaussRelations.f90

gaussRelations.obj: ../gaussRelations.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gaussRelations.obj `if test -f '../gaussRelations.f90'; then $(CYGPATH_W) '../gaussRelations.f90'; else $(CYGPATH_W) '$(srcdir)/../gaussRelations.f90'; fi`

gaussIntegrals.o: ../gaussIntegrals.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gaussIntegrals.o `test -f '../gaussIntegrals.f90' || echo '$(srcdir)/'`../gaussIntegrals.f90

gaussIntegrals.obj: ../gaussIntegrals.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o gaussIntegrals.obj `if test -f '../gaussIntegrals.f90'; then $(CYGPATH_W) '../gaussIntegrals.f90'; else $(CYGPATH_W) '$(srcdir)/../gaussIntegrals.f90'; fi`

coreCharge.o: ../coreCharge.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o coreCharge.o `test -f '../coreCharge.f90' || echo '$(srcdir)/'`../coreCharge.f90

coreCharge.obj: ../coreCharge.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o coreCharge.obj `if test -f '../coreCharge.f90'; then $(CYGPATH_W) '../coreCharge.f90'; else $(CYGPATH_W) '$(srcdir)/../coreCharge.f90'; fi`

OLCAO_SetupWrap.o: ../OLCAO_SetupWrap.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o OLCAO_SetupWrap.o `test -f '../OLCAO_SetupWrap.f90' || echo '$(srcdir)/'`../OLCAO_SetupWrap.f90

OLCAO_SetupWrap.obj: ../OLCAO_SetupWrap.f90
	$(FC) $(AM_FCFLAGS) $(FCFLAGS) -c -o OLCAO_SetupWrap.obj `if test -f '../OLCAO_SetupWrap.f90'; then $(CYGPATH_W) '../OLCAO_SetupWrap.f90'; else $(CYGPATH_W) '$(srcdir)/../OLCAO_SetupWrap.f90'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-local ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# OLCAOintg OLCAOband OLCAOdos \
#   OLCAObond OLCAOoptc OLCAOwave
clean-local:
	rm -f *mod
#OLCAOintg_SOURCES = ../../kinds.f90 ../../constants.f90 ../../readData.f90 \
#   ../stringSubs.f90 ../mathSubs.f90 ../sortSubs.f90 ../interfaces.F90 \
#   ../timeStamps.f90 ../commandLine.f90 ../potSites.f90 ../potTypes.f90 \
#   ../atomicTypes.f90 ../atomicSites.f90 ../potential.f90 ../lattice.f90 \
#   ../basis.f90 ../kpoints.f90 ../gaussIntegrals.f90 ../hdf5PSCFIntg.f90 \
#   ../hdf5SetupIntg.F90 \
#   ../hdf5SetupElec.f90 ../hdf5SetupExco.f90 ../hdf5Setup.f90 ../exchCorr.f90 \
#   ../intgOrtho.F90 \
#   ../intgSaving.F90 ../integralsPSCF.F90 ../input.f90 ../OLCAO_Intg.f90 \
#   ../OLCAO_IntgWrap.f90
#OLCAOband_SOURCES = ../../kinds.f90 ../../constants.f90 ../../readData.f90 \
#   ../stringSubs.f90 ../mathSubs.f90 ../sortSubs.f90 ../interfaces.F90 \
#   ../timeStamps.f90 ../commandLine.f90 ../potSites.f90 ../potTypes.f90 \
#   ../atomicTypes.f90 ../atomicSites.f90 ../potential.f90 ../lattice.f90 \
#   ../basis.f90 ../kpoints.f90 ../gaussIntegrals.f90 ../hdf5PSCFBand.F90 \
#   ../hdf5PSCFIntg.f90 ../hdf5SetupIntg.F90 ../hdf5SetupElec.f90 \
#   ../hdf5SetupExco.f90 ../hdf5Setup.f90 ../hdf5MainEval.f90 ../hdf5MainEvect.F90 \
#   ../hdf5Main.f90 \
#   ../exchCorr.f90 ../intgOrtho.F90 ../intgSaving.F90 ../integralsPSCF.F90 \
#   ../matrixSubs.F90 ../input.f90 ../secularEqn.F90 ../populate.F90 \
#   ../OLCAO_Band.F90 ../OLCAO_BandWrap.f90
#OLCAOdos_SOURCES = ../../kinds.f90 ../../constants.f90 ../../readData.f90 \
#   ../stringSubs.f90 ../mathSubs.f90 ../sortSubs.f90 ../interfaces.F90 \
#   ../timeStamps.f90 ../commandLine.f90 ../potSites.f90 ../potTypes.f90 \
#   ../atomicTypes.f90 ../atomicSites.f90 ../potential.f90 ../lattice.f90 \
#   ../kpoints.f90 ../hdf5PSCFBand.F90 ../hdf5SetupIntg.F90 \
#   ../hdf5SetupElec.f90 ../hdf5SetupExco.f90 ../hdf5Setup.f90 ../hdf5MainEval.f90 \
#   ../hdf5MainEvect.F90 ../hdf5Main.f90 ../exchCorr.f90 ../matrixSubs.F90 ../input.f90 \
#   ../secularEqn.F90 ../populate.F90 ../dos.F90 ../OLCAO_DOS.f90
#OLCAObond_SOURCES = ../../kinds.f90 ../../constants.f90 ../../readData.f90 \
#   ../stringSubs.f90 ../mathSubs.f90 ../sortSubs.f90 ../interfaces.F90 \
#   ../timeStamps.f90 ../commandLine.f90 ../potSites.f90 ../potTypes.f90 \
#   ../atomicTypes.f90 ../atomicSites.f90 ../potential.f90 ../lattice.f90 \
#   ../kpoints.f90 ../hdf5PSCFBand.F90 ../hdf5SetupIntg.F90 \
#   ../hdf5SetupElec.f90 ../hdf5SetupExco.f90 ../hdf5Setup.f90 ../hdf5MainEval.f90 \
#   ../hdf5MainEvect.F90 ../hdf5Main.f90 ../exchCorr.f90 ../matrixSubs.F90 ../input.f90 \
#   ../secularEqn.F90 ../populate.F90 ../bond.F90 ../OLCAO_Bond.f90
#OLCAOoptc_SOURCES = ../../kinds.f90 ../../constants.f90 ../../readData.f90 \
#   ../stringSubs.f90 ../mathSubs.f90 ../sortSubs.f90 ../interfaces.F90 \
#   ../timeStamps.f90 ../commandLine.f90 ../potSites.f90 ../potTypes.f90 \
#   ../atomicTypes.f90 ../atomicSites.f90 ../potential.f90 ../lattice.f90 \
#   ../basis.f90 ../kpoints.f90 ../gaussIntegrals.f90 ../hdf5PSCFBand.F90 \
#   ../hdf5PSCFIntg.f90 ../hdf5SetupIntg.F90 ../hdf5SetupElec.f90 \
#   ../hdf5SetupExco.f90 ../hdf5Setup.f90 ../hdf5MainEval.f90 ../hdf5MainEvect.F90 \
#   ../hdf5Main.f90 ../exchCorr.f90 ../intgOrtho.F90 ../intgSaving.F90 \
#   ../integralsPSCF.F90 \
#   ../matrixSubs.F90 ../input.f90 ../secularEqn.F90 ../populate.F90 \
#   ../optc.F90 ../optcPrint.F90 ../OLCAO_Optc.f90 ../OLCAO_OptcWrap.f90
#OLCAOwave_SOURCES = ../../kinds.f90 ../../constants.f90 ../../readData.f90 \
#   ../../elementData.f90 ../stringSubs.f90 ../mathSubs.f90 ../sortSubs.f90 \
#   ../interfaces.F90 ../timeStamps.f90 ../commandLine.f90 ../potSites.f90 \
#   ../potTypes.f90 ../atomicTypes.f90 ../atomicSites.f90 ../potential.f90 \
#   ../lattice.f90 ../basis.f90 ../kpoints.f90 ../hdf5PSCFBand.F90 \
#   ../hdf5SetupIntg.F90 ../hdf5SetupElec.f90 ../hdf5SetupExco.f90 ../hdf5Setup.f90 \
#   ../hdf5MainEval.f90 ../hdf5MainEvect.F90 ../hdf5Main.f90 ../exchCorr.f90 \
#   ../matrixSubs.F90 \
#   ../input.f90 ../secularEqn.F90 ../populate.F90 ../openDX.f90 ../wave.F90 \
#   ../OLCAO_Wave.f90
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
